# Multi-Stage Evaluation Pack
# This example shows a complex evaluation with conditional stages

schema_version: "1.0"
name: "Multi-Stage Progressive Evaluation"
version: "1.0"
description: "Complex evaluation with multiple stages and early stopping on critical failures"
author: "Lake Merritt Team"

ingestion:
  type: "csv"
  config:
    mode: "generate_then_evaluate"  # Will generate outputs first

pipeline:
  # Stage 1: Basic validation
  - name: "Format Validation"
    scorer: "exact_match"
    config:
      case_sensitive: false
      normalize_whitespace: true
    on_fail: "stop"  # Stop evaluation if basic format is wrong
  
  # Stage 2: Content quality
  - name: "Content Similarity"
    scorer: "fuzzy_match"
    config:
      threshold: 0.6
    on_fail: "continue"
  
  # Stage 3: Semantic evaluation (only if fuzzy match passes)
  - name: "Semantic Correctness"
    scorer: "llm_judge"
    config:
      model: "gpt-4"
      temperature: 0.0
      criteria:
        - "The output conveys the same meaning as the expected output"
        - "The output is factually accurate"
        - "The output is appropriately detailed"
      threshold: 0.8
    on_fail: "continue"
    run_if: "fuzzy_match.passed"  # Conditional execution (future feature)

reporting:
  format: "html"
  template: "comprehensive"

metadata:
  tags: ["multi-stage", "conditional", "comprehensive", "example"]
  difficulty: "expert"
  features_demonstrated:
    - "Early stopping with on_fail: stop"
    - "Progressive evaluation stages"
    - "Multiple scorer types"
    - "Conditional execution (future)"